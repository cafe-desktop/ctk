private_headers = [
  'inspector',
  'a11y',
  'ctkaccelgroupprivate.h',
  'ctkaccelmapprivate.h',
  'ctkadjustmentprivate.h',
  'ctkallocatedbitmaskprivate.h',
  'ctkappchooserprivate.h',
  'ctkapplicationaccelsprivate.h',
  'ctkapplicationprivate.h',
  'ctkbindingsprivate.h',
  'ctkbitmaskprivate.h',
  'ctkboxprivate.h',
  'ctkbuilderprivate.h',
  'ctkbuttonprivate.h',
  'ctkcairoblurprivate.h',
  'ctkcellareaboxcontextprivate.h',
  'ctkclipboardprivate.h',
  'ctkcolorchooserprivate.h',
  'ctkcoloreditorprivate.h',
  'ctkcolorplaneprivate.h',
  'ctkcolorscaleprivate.h',
  'ctkcolorswatchprivate.h',
  'ctkcomboboxprivate.h',
  'ctkcontainerprivate.h',
  'ctkcssanimatedstyleprivate.h',
  'ctkcssanimationprivate.h',
  'ctkcssarrayvalueprivate.h',
  'ctkcssbgsizevalueprivate.h',
  'ctkcssbordervalueprivate.h',
  'ctkcsscolorvalueprivate.h',
  'ctkcsscornervalueprivate.h',
  'ctkcsscustompropertyprivate.h',
  'ctkcsseasevalueprivate.h',
  'ctkcssenginevalueprivate.h',
  'ctkcssenumvalueprivate.h',
  'ctkcssiconthemevalueprivate.h',
  'ctkcssimagebuiltinprivate.h',
  'ctkcssimagecrossfadeprivate.h',
  'ctkcssimagegradientprivate.h',
  'ctkcssimageiconthemeprivate.h',
  'ctkcssimagelinearprivate.h',
  'ctkcssimageprivate.h',
  'ctkcssimagescaledprivate.h',
  'ctkcssimagesurfaceprivate.h',
  'ctkcssimageurlprivate.h',
  'ctkcssimagevalueprivate.h',
  'ctkcssimagewin32private.h',
  'ctkcssinheritvalueprivate.h',
  'ctkcssinitialvalueprivate.h',
  'ctkcsskeyframesprivate.h',
  'ctkcsslookupprivate.h',
  'ctkcssmatcherprivate.h',
  'ctkcssnodeprivate.h',
  'ctkcssnodedeclarationprivate.h',
  'ctkcssnumbervalueprivate.h',
  'ctkcsspathnodeprivate.h',
  'ctkcssparserprivate.h',
  'ctkcsspositionvalueprivate.h',
  'ctkcssproviderprivate.h',
  'ctkcssrepeatvalueprivate.h',
  'ctkcssrgbavalueprivate.h',
  'ctkcsssectionprivate.h',
  'ctkcssselectorprivate.h',
  'ctkcssshadowsvalueprivate.h',
  'ctkcssshadowvalueprivate.h',
  'ctkcssshorthandpropertyprivate.h',
  'ctkcssstaticstyleprivate.h',
  'ctkcssstringvalueprivate.h',
  'ctkcssstylefuncsprivate.h',
  'ctkcssstyleprivate.h',
  'ctkcssstylepropertyprivate.h',
  'ctkcsstransformvalueprivate.h',
  'ctkcsstransientnodeprivate.h',
  'ctkcsstransitionprivate.h',
  'ctkcsstypedvalueprivate.h',
  'ctkcsstypesprivate.h',
  'ctkcssunsetvalueprivate.h',
  'ctkcssvalueprivate.h',
  'ctkcsswidgetnodeprivate.h',
  'ctkdialogprivate.h',
  'ctkentryprivate.h',
  'ctkeventcontrollerprivate.h',
  'ctkfilechooserprivate.h',
  'ctkfilechooserwidgetprivate.h',
  'ctkfontchooserprivate.h',
  'ctkgesturedragprivate.h',
  'ctkgesturelongpressprivate.h',
  'ctkgesturemultipressprivate.h',
  'ctkgesturepanprivate.h',
  'ctkgestureprivate.h',
  'ctkgesturerotateprivate.h',
  'ctkgesturesingleprivate.h',
  'ctkgestureswipeprivate.h',
  'ctkgesturezoomprivate.h',
  'ctkheaderbarprivate.h',
  'ctkhslaprivate.h',
  'ctkiconhelperprivate.h',
  'ctkiconviewprivate.h',
  'ctkimageprivate.h',
  'ctkimmoduleprivate.h',
  'ctklabelprivate.h',
  'ctklockbuttonprivate.h',
  'ctkmagnifierprivate.h',
  'ctkmenubuttonprivate.h',
  'ctkmenuitemprivate.h',
  'ctkmenuprivate.h',
  'ctkmenushellprivate.h',
  'ctkmodulesprivate.h',
  'ctkmountoperationprivate.h',
  'ctkorientableprivate.h',
  'ctkpixelcacheprivate.h',
  'ctkplacessidebarprivate.h',
  'ctkplacesviewprivate.h',
  'ctkplacesviewrowprivate.h',
  'ctkpopoverprivate.h',
  'ctkprinter-private.h',
  'ctkprintoperation-private.h',
  'ctkprivate.h',
  'ctkrangeprivate.h',
  'ctkrecentchooserprivate.h',
  'ctkrenderbackgroundprivate.h',
  'ctkrenderborderprivate.h',
  'ctkrendericonprivate.h',
  'ctkrenderprivate.h',
  'ctkroundedboxprivate.h',
  'ctkscaleprivate.h',
  'ctksearchengine.h',
  'ctksearchenginemodel.h',
  'ctksearchenginequartz.h',
  'ctksearchenginesimple.h',
  'ctksearchenginetracker.h',
  'ctksearchentryprivate.h',
  'ctkselectionprivate.h',
  'ctksettingsprivate.h',
  'ctksidebarrowprivate.h',
  'ctksizegroup-private.h',
  'ctksizerequestcacheprivate.h',
  'ctksocketprivate.h',
  'ctkstyleanimationprivate.h',
  'ctkstylecascadeprivate.h',
  'ctkstylecontextprivate.h',
  'ctkstylepropertyprivate.h',
  'ctkstyleproviderprivate.h',
  'ctktextattributesprivate.h',
  'ctktextchildprivate.h',
  'ctktexthandleprivate.h',
  'ctktextiterprivate.h',
  'ctktextmarkprivate.h',
  'ctktexttagprivate.h',
  'ctktogglebuttonprivate.h',
  'ctktoolbarprivate.h',
  'ctktoolpaletteprivate.h',
  'ctktooltipprivate.h',
  'ctktooltipwindowprivate.h',
  'ctktreeprivate.h',
  'ctkwidgetprivate.h',
  'ctkwin32themeprivate.h',
  'ctkwindowprivate.h',
  'fnmatch.h',
  'ctkactionmuxer.h',
  'ctkactionobserver.h',
  'ctkactionobservable.h',
  'ctk9slice.h',
  'ctkanimationdescription.h',
  'ctkbitmaskprivateimpl.h',
  'ctkbookmarksmanager.h',
  'ctkdbusgenerated.c',
  'ctkdbusgenerated.h',
  'ctkdebug.h',
  'ctkactionhelper.h',
  'ctkdndcursors.h',
  'ctkfilechooserdefault.h',
  'ctkfilechooserembed.h',
  'ctkfilechooserentry.h',
  'ctkfilechoosersettings.h',
  'ctkfilechooserutils.h',
  'ctkfilesystem.h',
  'ctkfilesystemmodel.h',
  'ctkfilesystemunix.h',
  'ctkfilesystemwin32.h',
  'ctkfontchooserutils.h',
  'ctkiconcache.h',
  'ctkiconcachevalidator.h',
  'ctkiconthemeparser.h',
  'ctkintl.h',
  'ctkkeyhash.h',
  'ctkkineticscrolling.h',
  'ctkmarshal.h',
  'ctkmnemonichash.h',
  'ctkmenutracker.h',
  'ctkmenutrackeritem.h',
  'ctkmenusectionbox.h',
  'ctkmodelmenu.h',
  'ctkmodelmenuitem.h',
  'ctkmodifierstyle.h',
  'ctkpathbar.h',
  'ctkprintbackend.h',
  'ctkprinteroption.h',
  'ctkprinteroptionset.h',
  'ctkprinteroptionwidget.h',
  'ctkprint-win32.h',
  'ctkprintutils.h',
  'ctkprivate.h',
  'ctkprivatetypebuiltins.h',
  'ctkquery.h',
  'ctkrbtree.h',
  'ctkrecentchooserdefault.h',
  'ctkrecentchooserutils.h',
  'ctksearchengine.h',
  'ctksearchenginetracker.h',
  'ctksearchenginesimple.h',
  'ctksearchenginequartz.h',
  'ctksequence.h',
  'ctksocketprivate.h',
  'ctktextbtree.h',
  'ctktextbufferserialize.h',
  'ctktextdisplay.h',
  'ctktextlayout.h',
  'ctktextsegment.h',
  'ctktexttypes.h',
  'ctktextutil.h',
  'ctktimeline.h',
  'ctkthemes.h',
  'ctktrashmonitor.h',
  'ctktrayicon.h',
  'ctktreedatalist.h',
  'ctktreemenu.h',
  'ctktypebuiltins.h',
  'ctkxembed.h',
  'ctkwin32embed.h',
  'ctkwin32embedwidget.h',
  'ctkwindow-decorate.h',
  'xdgmime',
  'xembed.h',
]

images = [
  'images/aboutdialog.png',
  'images/accel-label.png',
  'images/action-bar.png',
  'images/appchooserbutton.png',
  'images/appchooserdialog.png',
  'images/assistant.png',
  'images/box-packing.png',
  'images/box-expand.png',
  'images/button.png',
  'images/check-button.png',
  'images/color-button.png',
  'images/colorchooser.png',
  'images/combo-box.png',
  'images/combo-box-entry.png',
  'images/combo-box-text.png',
  'images/entry.png',
  'images/figure-hierarchical-drawing.png',
  'images/figure-windowed-label.png',
  'images/file-button.png',
  'images/filechooser.png',
  'images/font-button.png',
  'images/fontchooser.png',
  'images/frame.png',
  'images/glarea.png',
  'images/headerbar.png',
  'images/icon-view.png',
  'images/image.png',
  'images/info-bar.png',
  'images/label.png',
  'images/levelbar.png',
  'images/link-button.png',
  'images/list-and-tree.png',
  'images/lock-button.png',
  'images/lockbutton.png',
  'images/lockbutton-locked.png',
  'images/lockbutton-unlocked.png',
  'images/lockbutton-sorry.png',
  'images/menubar.png',
  'images/menu-button.png',
  'images/messagedialog.png',
  'images/multiline-text.png',
  'images/notebook.png',
  'images/panes.png',
  'images/pagesetupdialog.png',
  'images/placessidebar.png',
  'images/popup-anchors.png',
  'images/popup-flip.png',
  'images/popup-slide.png',
  'images/printdialog.png',
  'images/progressbar.png',
  'images/radio-group.png',
  'images/recentchooserdialog.png',
  'images/scales.png',
  'images/scrollbar.png',
  'images/scrolledwindow.png',
  'images/search-bar.png',
  'images/search-entry.png',
  'images/separator.png',
  'images/sidebar.png',
  'images/spinbutton.png',
  'images/spinner.png',
  'images/stack.png',
  'images/stackswitcher.png',
  'images/statusbar.png',
  'images/toggle-button.png',
  'images/toolbar.png',
  'images/toolpalette.png',
  'images/tree-view-coordinates.png',
  'images/volumebutton.png',
  'images/window.png',
  'images/layout-btlr.png',
  'images/layout-btrl.png',
  'images/layout-lrbt.png',
  'images/layout-lrtb.png',
  'images/layout-rlbt.png',
  'images/layout-rltb.png',
  'images/layout-tblr.png',
  'images/layout-tbrl.png',
  'images/widget-hvalign.png',
  'images/window-default.png',
  'images/hello-world.png',
  'images/grid-packing.png',
  'images/drawing.png',
  'images/switch.png',
  'images/linear.png',
  'images/ease.png',
  'images/ease-in-out.png',
  'images/ease-in.png',
  'images/ease-out.png',
  'images/gradient1.png',
  'images/gradient2.png',
  'images/gradient3.png',
  'images/gradient4.png',
  'images/border1.png',
  'images/border2.png',
  'images/border3.png',
  'images/slices.png',
  'images/checks.png',
  'images/options.png',
  'images/arrows.png',
  'images/expanders.png',
  'images/background.png',
  'images/frames.png',
  'images/frame-gap.png',
  'images/sliders.png',
  'images/focus.png',
  'images/handles.png',
  'images/extensions.png',
  'images/numerableicon.png',
  'images/numerableicon2.png',
  'images/bloatpad-osx.png',
  'images/bloatpad-gnome.png',
  'images/bloatpad-xfce.png',
  'images/down-center.png',
  'images/down-end.png',
  'images/down-start.png',
  'images/left-center.png',
  'images/left-end.png',
  'images/left-start.png',
  'images/right-center.png',
  'images/right-end.png',
  'images/right-start.png',
  'images/up-center.png',
  'images/up-end.png',
  'images/up-start.png',
  'images/list-box.png',
  'images/getting-started-app1.png',
  'images/getting-started-app2.png',
  'images/getting-started-app3.png',
  'images/getting-started-app4.png',
  'images/getting-started-app6.png',
  'images/getting-started-app7.png',
  'images/getting-started-app8.png',
  'images/getting-started-app9.png',
  'images/getting-started-app10.png',
  'images/exampleapp.png',
  'images/flow-box.png',
  'images/inspector.png',
  'images/gedit-shortcuts.png',
  'images/clocks-shortcuts.png',
  'images/builder-shortcuts.png',
]

content_files = [
  'broadway.xml',
  'broadwayd.xml',
  'building.sgml',
  'css-overview.xml',
  'css-properties.xml',
  'ctk3-demo-application.xml',
  'ctk3-demo.xml',
  'ctk3-icon-browser.xml',
  'ctk3-widget-factory.xml',
  'ctk-builder-tool.xml',
  'ctk-encode-symbolic-svg.xml',
  'ctk-launch.xml',
  'ctk-query-immodules-3.0.xml',
  'ctk-query-settings.xml',
  'ctk-update-icon-cache.xml',
  'osx.sgml',
  'overview.xml',
  'resources.sgml',
  'running.sgml',
  'visual_index.xml',
  'wayland.xml',
  'windows.sgml',
  'x11.sgml',
]

expand_content_files = [
  'compiling.sgml',
  'drawing-model.xml',
  join_paths(meson.current_build_dir(), 'getting_started.xml'),
  'glossary.xml',
  'input-handling.xml',
  'migrating-2to3.xml',
  'migrating-3xtoy.xml',
  'migrating-checklist.sgml',
  'migrating-CtkStyleContext.xml',
  'migrating-smclient-CtkApplication.xml',
  'migrating-unique-CtkApplication.xml',
  'question_index.sgml',
  'text_widget.sgml',
  'tree_widget.sgml',
]

content_files += expand_content_files

types_conf = configuration_data()
if os_win32
  types_conf.set('DISABLE_ON_W32', '%')
else
  types_conf.set('DISABLE_ON_W32', '')
endif

if os_darwin
  types_conf.set('DISABLE_ON_QUARTZ', '%')
else
  types_conf.set('DISABLE_ON_QUARTZ', '')
endif

if x11_enabled
  types_conf.set('ENABLE_ON_X11', '')
else
  types_conf.set('ENABLE_ON_X11', '%')
endif

if get_option('gtk_doc')

    configure_file(input: 'version.xml.in', output: 'version.xml', configuration: version_conf)
    configure_file(input: 'getting_started.xml.in', output: 'getting_started.xml', configuration: src_dir_conf)

    gnome.gtkdoc('ctk3',
                 mode: 'none',
                 main_xml: 'ctk-docs.sgml',
                 src_dir: [
                   ctkinc,
                ],
                 dependencies: libctk_dep,
                 gobject_typesfile: configure_file(
                   input: 'ctk3.types.in',
                   output: 'ctk3.types',
                   configuration: types_conf,
                 ),
                 scan_args: [
                   '--ignore-decorators=_GDK_EXTERN|G_GNUC_WARN_UNUSED_RESULT',
                   '--ignore-headers=' + ' '.join(private_headers),
                 ],
                 mkdb_args: [
                   '--default-includes=ctk/ctk.h',
                 ],
                 fixxref_args: [
                   '--html-dir=@0@'.format(docpath),
                   '--extra-dir=@0@'.format(join_paths(glib_docpath, 'glib')),
                   '--extra-dir=@0@'.format(join_paths(glib_docpath, 'gobject')),
                   '--extra-dir=@0@'.format(join_paths(glib_docpath, 'gio')),
                   '--extra-dir=@0@'.format(cairo_docpath),
                   '--extra-dir=@0@'.format(gdkpixbuf_docpath),
                   '--extra-dir=../gdk',
                 ],
                 content_files: content_files,
                 expand_content_files: expand_content_files,
                 html_assets: images,
                 install: true)
endif

xsltproc = find_program('xsltproc', required: false)
if get_option('man') and not xsltproc.found()
  error('No xsltproc found, but man pages were explicitly enabled')
endif

if get_option('man') and xsltproc.found()
  xlstproc_flags = [
    '--nonet',
    '--stringparam', 'man.output.quietly', '1',
    '--stringparam', 'funcsynopsis.style', 'ansi',
    '--stringparam', 'man.th.extra1.suppress', '1',
    '--stringparam', 'man.authors.section.enabled', '0',
    '--stringparam', 'man.copyright.section.enabled', '0',
  ]

  man_files = [
    [ 'ctk-query-immodules-3.0', '1', ],
    [ 'ctk-update-icon-cache', '1', ],
    [ 'ctk-encode-symbolic-svg', '1', ],
    [ 'ctk-launch', '1', ],
    [ 'ctk3-demo', '1', ],
    [ 'ctk3-demo-application', '1', ],
    [ 'ctk3-widget-factory', '1', ],
    [ 'ctk3-icon-browser', '1', ],
    [ 'ctk-builder-tool', '1', ],
    [ 'ctk-query-settings', '1', ],
  ]

  if broadway_enabled
    man_files += [[ 'broadwayd', '1', ]]
  endif

  foreach man: man_files
    man_name = man.get(0)
    man_section = man.get(1, '1')
    custom_target('@0@.@1@'.format(man_name, man_section),
                  input: '@0@.xml'.format(man_name),
                  output: '@0@.@1@'.format(man_name, man_section),
                  command: [
                    xsltproc,
                    xlstproc_flags,
                    '-o', '@OUTPUT@',
                    'http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl',
                    '@INPUT@',
                  ],
                  install: true,
                  install_dir: join_paths(get_option('mandir'), 'man@0@'.format(man_section)))
  endforeach
endif
